@model LMS.Data.EF.Lesson
@using LMS.UI.Controllers
@using Microsoft.AspNet.Identity
@{
    ViewBag.Title = Model.LessonTitle;

    var currentLesson = Model.LessonID;
    ViewBag.curLess= currentLesson;
    


    var v = Model.VideoUrl.IndexOf("v=");
    var amp = Model.VideoUrl.IndexOf("&", v);
    string vid;
    // if the video id is the last value in the url
    if (amp == -1)
    {
        vid = Model.VideoUrl.Substring(v + 2);
        // if there are other parameters after the video id in the url
    }
    else
    {
        vid = Model.VideoUrl.Substring(v + 2, amp - (v + 2));
    }
    ViewBag.VideoID = vid;
}


<h2>@ViewBag.Title</h2>

<div>
    <hr />
    <dl class="dl-horizontal">
        <dt>
            @*@Html.DisplayNameFor(model => model.LessonTitle)*@
            @Html.DisplayName("Lesson Title")
        </dt>

        <dd>
            @Html.DisplayFor(model => model.LessonTitle)
        </dd>
        <dt>
            @*@Html.DisplayNameFor(model => model.Cours.CourseName)*@
           @Html.DisplayName("Course")
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Cours.CourseName)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Introduction)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Introduction)
        </dd>
        <dt>
            @Html.DisplayName("Accompanyment PDF")
        </dt>
        <dd>
            @if (Model.PdfFileName != null)
            {
                <a href="~/Content/documents/@Model.PdfFileName" target="_blank">@Model.LessonTitle PDF </a>
            }
        </dd>


        @if (User.IsInRole("Admin"))
        {
            <dt>
                @Html.DisplayNameFor(model => model.IsActive)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.IsActive)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.VideoUrl)
            </dt>
            <dd>
                @Html.DisplayFor(model => model.VideoUrl)
            </dd>
            <dt>
                @Html.DisplayNameFor(model => model.PdfFileName)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.PdfFileName)
            </dd>
        }
    </dl>
    <div id="player"></div>
    <script src="http://www.youtube.com/player_api"></script>

    <script>
        // create youtube player
        var player;
        var h = '@ViewBag.height';
        var w = '@ViewBag.width';
        function onYouTubePlayerAPIReady() {
            player = new YT.Player('player', {
                height: 360,
                width: 640,
                modestbranding: 1,
                videoId: '@ViewBag.VideoID',
                playerVars: {
                    rel: 0,
                    autoplay: 0,
                    disablekb: 0,
                    showsearch: 0,
                    showinfo: 0,
                    controls: 1,
                    fs: 1,
                    hd: 1,
                    html5: 1,
                    iv_load_policy: 3
                },
                events: {
                    onReady: onPlayerReady,
                    onStateChange: onPlayerStateChange
                }
            });
        }
        // autoplay video
        function onPlayerReady(event) {
            event.target.playVideo();//null if we want to force autoplay off
        }
        //function onPlayerStateChange(event) {
        //    if (event.data === 1) {
        //        //autofill date viewed
        //        alert('DateViewedUpdateTest');
        //    }
        //}

        // when video ends
        //data needs to be sent to the create thing in key/value pairs

        function onPlayerStateChange(event) {
            if (event.data === 0) {
                $(document).ready(function () {
                    $("#show").toggle();
                });                                                                             
                //update LessonsViewed table
                //alert('done');
            }
        }
    </script>


    <form id="show" hidden="hidden" action="@Url.Action("Create", "LessonViews")" method="post">
        @Html.AntiForgeryToken()
        @*<input type="hidden" id="UserID" name="UserID" value="@User.Identity.GetUserId()" />*@
        <input type="hidden" id="LessonID" name="LessonID" value="@Model.LessonID" />
        <input type="hidden" id="DateViewed" name="DateViewed" value="@DateTime.Now" />
        <input class="btn btn-success" type="submit" value="Verify Completion"  />
    </form>

</div>




<p>
    @if (User.IsInRole("Admin"))
    {
        @Html.ActionLink("Edit", "Edit", new { id = Model.LessonID }) @:|
    }
    @Html.ActionLink("Back to List", "Index")
</p>
